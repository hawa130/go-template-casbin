// Code generated by ent, DO NOT EDIT.

package runtime

import (
	"context"
	"time"

	"github.com/hawa130/computility-cloud/ent/casbinrule"
	"github.com/hawa130/computility-cloud/ent/publickey"
	"github.com/hawa130/computility-cloud/ent/schema"
	"github.com/hawa130/computility-cloud/ent/user"
	"github.com/rs/xid"

	"entgo.io/ent"
	"entgo.io/ent/privacy"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	casbinruleMixin := schema.CasbinRule{}.Mixin()
	casbinruleMixinFields0 := casbinruleMixin[0].Fields()
	_ = casbinruleMixinFields0
	casbinruleFields := schema.CasbinRule{}.Fields()
	_ = casbinruleFields
	// casbinruleDescPtype is the schema descriptor for Ptype field.
	casbinruleDescPtype := casbinruleFields[0].Descriptor()
	// casbinrule.DefaultPtype holds the default value on creation for the Ptype field.
	casbinrule.DefaultPtype = casbinruleDescPtype.Default.(string)
	// casbinruleDescV0 is the schema descriptor for V0 field.
	casbinruleDescV0 := casbinruleFields[1].Descriptor()
	// casbinrule.DefaultV0 holds the default value on creation for the V0 field.
	casbinrule.DefaultV0 = casbinruleDescV0.Default.(string)
	// casbinruleDescV1 is the schema descriptor for V1 field.
	casbinruleDescV1 := casbinruleFields[2].Descriptor()
	// casbinrule.DefaultV1 holds the default value on creation for the V1 field.
	casbinrule.DefaultV1 = casbinruleDescV1.Default.(string)
	// casbinruleDescV2 is the schema descriptor for V2 field.
	casbinruleDescV2 := casbinruleFields[3].Descriptor()
	// casbinrule.DefaultV2 holds the default value on creation for the V2 field.
	casbinrule.DefaultV2 = casbinruleDescV2.Default.(string)
	// casbinruleDescV3 is the schema descriptor for V3 field.
	casbinruleDescV3 := casbinruleFields[4].Descriptor()
	// casbinrule.DefaultV3 holds the default value on creation for the V3 field.
	casbinrule.DefaultV3 = casbinruleDescV3.Default.(string)
	// casbinruleDescV4 is the schema descriptor for V4 field.
	casbinruleDescV4 := casbinruleFields[5].Descriptor()
	// casbinrule.DefaultV4 holds the default value on creation for the V4 field.
	casbinrule.DefaultV4 = casbinruleDescV4.Default.(string)
	// casbinruleDescV5 is the schema descriptor for V5 field.
	casbinruleDescV5 := casbinruleFields[6].Descriptor()
	// casbinrule.DefaultV5 holds the default value on creation for the V5 field.
	casbinrule.DefaultV5 = casbinruleDescV5.Default.(string)
	// casbinruleDescID is the schema descriptor for id field.
	casbinruleDescID := casbinruleMixinFields0[0].Descriptor()
	// casbinrule.DefaultID holds the default value on creation for the id field.
	casbinrule.DefaultID = casbinruleDescID.Default.(func() xid.ID)
	publickeyMixin := schema.PublicKey{}.Mixin()
	publickey.Policy = privacy.NewPolicies(schema.PublicKey{})
	publickey.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := publickey.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	publickeyHooks := schema.PublicKey{}.Hooks()

	publickey.Hooks[1] = publickeyHooks[0]

	publickey.Hooks[2] = publickeyHooks[1]

	publickey.Hooks[3] = publickeyHooks[2]
	publickeyMixinFields0 := publickeyMixin[0].Fields()
	_ = publickeyMixinFields0
	publickeyMixinFields1 := publickeyMixin[1].Fields()
	_ = publickeyMixinFields1
	publickeyFields := schema.PublicKey{}.Fields()
	_ = publickeyFields
	// publickeyDescCreatedAt is the schema descriptor for created_at field.
	publickeyDescCreatedAt := publickeyMixinFields1[0].Descriptor()
	// publickey.DefaultCreatedAt holds the default value on creation for the created_at field.
	publickey.DefaultCreatedAt = publickeyDescCreatedAt.Default.(func() time.Time)
	// publickeyDescUpdatedAt is the schema descriptor for updated_at field.
	publickeyDescUpdatedAt := publickeyMixinFields1[1].Descriptor()
	// publickey.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	publickey.DefaultUpdatedAt = publickeyDescUpdatedAt.Default.(func() time.Time)
	// publickey.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	publickey.UpdateDefaultUpdatedAt = publickeyDescUpdatedAt.UpdateDefault.(func() time.Time)
	// publickeyDescID is the schema descriptor for id field.
	publickeyDescID := publickeyMixinFields0[0].Descriptor()
	// publickey.DefaultID holds the default value on creation for the id field.
	publickey.DefaultID = publickeyDescID.Default.(func() xid.ID)
	userMixin := schema.User{}.Mixin()
	user.Policy = privacy.NewPolicies(schema.User{})
	user.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := user.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	userHooks := schema.User{}.Hooks()

	user.Hooks[1] = userHooks[0]

	user.Hooks[2] = userHooks[1]

	user.Hooks[3] = userHooks[2]

	user.Hooks[4] = userHooks[3]

	user.Hooks[5] = userHooks[4]

	user.Hooks[6] = userHooks[5]
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userMixinFields1 := userMixin[1].Fields()
	_ = userMixinFields1
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userMixinFields1[0].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userMixinFields1[1].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescID is the schema descriptor for id field.
	userDescID := userMixinFields0[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() xid.ID)
}

const (
	Version = "v0.13.1"                                         // Version of ent codegen.
	Sum     = "h1:uD8QwN1h6SNphdCCzmkMN3feSUzNnVvV/WIkHKMbzOE=" // Sum of ent codegen.
)
