// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CasbinRulesColumns holds the columns for the "casbin_rules" table.
	CasbinRulesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, SchemaType: map[string]string{"postgres": "varchar(20)"}},
		{Name: "ptype", Type: field.TypeString, Default: ""},
		{Name: "v0", Type: field.TypeString, Default: ""},
		{Name: "v1", Type: field.TypeString, Default: ""},
		{Name: "v2", Type: field.TypeString, Default: ""},
		{Name: "v3", Type: field.TypeString, Default: ""},
		{Name: "v4", Type: field.TypeString, Default: ""},
		{Name: "v5", Type: field.TypeString, Default: ""},
	}
	// CasbinRulesTable holds the schema information for the "casbin_rules" table.
	CasbinRulesTable = &schema.Table{
		Name:       "casbin_rules",
		Columns:    CasbinRulesColumns,
		PrimaryKey: []*schema.Column{CasbinRulesColumns[0]},
	}
	// PublicKeysColumns holds the columns for the "public_keys" table.
	PublicKeysColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, SchemaType: map[string]string{"postgres": "varchar(20)"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "key", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "type", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeString, Nullable: true},
		{Name: "expired_at", Type: field.TypeTime, Nullable: true},
		{Name: "public_key_user", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"postgres": "varchar(20)"}},
	}
	// PublicKeysTable holds the schema information for the "public_keys" table.
	PublicKeysTable = &schema.Table{
		Name:       "public_keys",
		Columns:    PublicKeysColumns,
		PrimaryKey: []*schema.Column{PublicKeysColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "public_keys_users_user",
				Columns:    []*schema.Column{PublicKeysColumns[9]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "publickey_created_at",
				Unique:  false,
				Columns: []*schema.Column{PublicKeysColumns[1]},
			},
			{
				Name:    "publickey_updated_at",
				Unique:  false,
				Columns: []*schema.Column{PublicKeysColumns[2]},
			},
			{
				Name:    "publickey_expired_at",
				Unique:  false,
				Columns: []*schema.Column{PublicKeysColumns[8]},
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, SchemaType: map[string]string{"postgres": "varchar(20)"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "nickname", Type: field.TypeString, Nullable: true},
		{Name: "username", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "email", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "phone", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "user_parent", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"postgres": "varchar(20)"}},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "users_users_parent",
				Columns:    []*schema.Column{UsersColumns[8]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "user_created_at",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[1]},
			},
			{
				Name:    "user_updated_at",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[2]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CasbinRulesTable,
		PublicKeysTable,
		UsersTable,
	}
)

func init() {
	PublicKeysTable.ForeignKeys[0].RefTable = UsersTable
	UsersTable.ForeignKeys[0].RefTable = UsersTable
}
